services:
  ats-test-server-spring:
    image: aikusoni/ats-test-server-spring:latest
    container_name: ats-test-server-spring
    volumes:
      - ${TEST_SERVER_SPRING_LOG_HOME:-./logs/test}:/logs
    environment:
      LOG_HOME: logs
      SERVER_PORT: 8900
      SPRING_PROFILES_ACTIVE: local
    networks:
      - ats_internal_network
      - ats_vault_network

  ats-session-auth-server:
    image: aikusoni/ats-session-auth-server:latest
    volumes:
      - ${SESSION_AUTH_SERVER_LOG_HOME:-./logs/session}:/logs
    environment:
      DB_USER: ${AUTH_DB_USER:-user}
      DB_PASSWORD: ${AUTH_DB_PASSWORD:-user123}
      DB_DRIVER_CLASS_NAME: ${AUTH_DB_DRIVER_CLASS_NAME:-org.postgresql.Driver}
      DB_URL: ${AUTH_DB_URL:-jdbc:postgresql://ats-user-db:5432/userdb}
      LOG_HOME: logs
      SERVER_PORT: 8000
      SPRING_PROFILES_ACTIVE: local
      REDIS_HOST: session-cluster-redis
      REDIS_PORT: 6379
    deploy:
      replicas: 2  # Number of replicas for scaling
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
    networks:
      - ats_internal_network
      - ats_vault_network

  ats-landing:
    image: aikusoni/ats-landing:latest
    container_name: ats-landing
    volumes:
      - frontend_landing_volume:/upload_target
    command: [ "/bin/sh", "-c", "cp -r /dist/* /upload_target/" ]

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - "8080:8080"
      - "8001:8001"
    volumes:
      - ${NGINX_CONF:-./nginx/nginx.conf}:/custom/nginx/conf/nginx.conf
      - ${NGINX_LOG_HOME:-./logs/nginx}:/custom/nginx/logs
      - ${NGINX_CONF_D:-./nginx/conf.d}:/custom/nginx/conf/conf.d
      - frontend_landing_volume:/custom/nginx/html/landing
      - ${NGINX_503:-./nginx/503.html}:/custom/nginx/html/503.html
    #    user:
    #      ${NGINX_USER:-root} # Setup user for nginx container to access docker
    depends_on:
      - ats-test-server-spring
      - ats-session-auth-server
    networks:
      - ats_internal_network
      - ats_gateway_network
      - ats_vault_network

networks:
  ats_internal_network:
    external: true
  ats_vault_network:
    external: true
  ats_external_network:
    external: true
  ats_gateway_network:
    external: true

volumes:
  frontend_landing_volume:
    external: false
