services:
  session-cluster-redis:
    image: redis:latest
    container_name: session-cluster-redis
    command: [ "redis-server", "--port", "6379" ]
    networks:
      - ats_internal_network

  ats-user-db:
    build:
      context: .
      dockerfile: ./db_conf/user_db/Dockerfile
      args:
        USER_DB_SERVER_CRT_PATH: ${USER_DB_SERVER_CRT_PATH}
        USER_DB_SERVER_KEY_PATH: ${USER_DB_SERVER_KEY_PATH}
        USER_DB_CA_PATH: ${USER_DB_CA_PATH}
    container_name: ${USER_DB_CONTAINER_NAME:-ats-user-db}
    environment:
      POSTGRES_USER: ${USER_DB_VAULT_ID:-user}
      POSTGRES_PASSWORD: ${USER_DB_VAULT_PW:-user123}
      POSTGRES_DB: user_db
      USER_DB_SERVER_CRT_PATH: ${USER_DB_SERVER_CRT_PATH:-./credentials/crypto/server/user_db/server.crt}
      USER_DB_SERVER_KEY_PATH: ${USER_DB_SERVER_KEY_PATH:-./credentials/crypto/server/user_db/server.key}
      USER_DB_CA_PATH: ${USER_DB_CA_PATH:-./credentials/crypto/ca/user_db/ca.crt}
    ports:
      - "${USER_DB_PORT:-5432}:5432"
    volumes:
      - ${USER_DB_PG_DATA:-./storage/pg_data}:/var/lib/postgresql/data
      - ${USER_DB_PG_INIT:-./db_conf/user_db/init}:/docker-entrypoint-initdb.d
    networks:
      - ats_internal_network

networks:
  ats_internal_network:
    external: true
