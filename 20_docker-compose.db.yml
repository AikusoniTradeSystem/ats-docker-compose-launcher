services:
  session-cluster-redis:
    image: redis:latest
    restart: unless-stopped
    container_name: session-cluster-redis
    command: [ "redis-server", "--port", "6379" ]
    networks:
      - ats_internal_network

  ats-user-db:
    build:
      context: .
      dockerfile: ./db_conf/user_db/Dockerfile
      args:
        USER_DB_SERVER_CRT_PATH: ${USER_DB_SERVER_CRT_PATH}
        USER_DB_SERVER_KEY_PATH: ${USER_DB_SERVER_KEY_PATH}
        USER_DB_SERVER_SELF_CA_PATH: ${USER_DB_SERVER_SELF_CA_PATH}
        USER_DB_INIT_TEMPLATE_PATH: ${USER_DB_INIT_TEMPLATE_PATH:-./db_conf/user_db/init}
        VAULT_USER_ID: ${USER_DB_VAULT_ID:-user}
        VAULT_USER_PW: ${USER_DB_VAULT_PW:-user123}
    container_name: ${USER_DB_CONTAINER_NAME:-ats-user-db}
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    ports:
      - "${USER_DB_PORT:-5432}:5432"
    volumes:
      - user_db_pg_data:/var/lib/postgresql/data
    networks:
      - ats_internal_network

networks:
  ats_internal_network:
    external: true
    name: ${INTERNAL_NETWORK_NAME:-ats-internal-network}

volumes:
  user_db_pg_data:
    external: true
    name: ${USER_DB_PG_DATA_VOLUME_NAME:-ats-user-db-pg-data}